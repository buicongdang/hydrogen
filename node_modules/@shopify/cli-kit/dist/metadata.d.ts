import { AnyJson } from './json.js';
export interface RuntimeMetadataManager<TPublic extends AnyJson, TSensitive extends AnyJson> {
    /** Add some public metadata -- this should not contain any PII */
    addPublic: (data: Partial<TPublic>) => void;
    /** Add some potentially sensitive metadata -- this may include PII, but unnecessary data should never be tracked (this is a good fit for command args for instance) */
    addSensitive: (data: Partial<TSensitive>) => void;
    /** Get a snapshot of the tracked public data */
    getAllPublic: () => Partial<TPublic>;
    /** Get a snapshot of the tracked sensitive data */
    getAllSensitive: () => Partial<TSensitive>;
}
export declare type PublicSchema<T> = T extends RuntimeMetadataManager<infer TPublic, infer _TSensitive> ? TPublic : never;
export declare type SensitiveSchema<T> = T extends RuntimeMetadataManager<infer _TPublic, infer TSensitive> ? TSensitive : never;
/**
 * Creates a container for metadata collected at runtime.
 *
 * The container provides async-safe functions for extracting the gathered metadata, and for setting it.
 *
 */
export declare function createRuntimeMetadataContainer<TPublic extends AnyJson, TSensitive extends AnyJson = {
    [key: string]: never;
}>(): RuntimeMetadataManager<TPublic, TSensitive>;
declare const coreData: RuntimeMetadataManager<{
    placeholder: string;
}, {
    commandStartOptions: {
        startTime: number;
        startCommand: string;
        startArgs: string[];
    };
}>;
export declare const getAllPublic: () => Partial<{
    placeholder: string;
}>, getAllSensitive: () => Partial<{
    commandStartOptions: {
        startTime: number;
        startCommand: string;
        startArgs: string[];
    };
}>, addPublic: (data: Partial<{
    placeholder: string;
}>) => void, addSensitive: (data: Partial<{
    commandStartOptions: {
        startTime: number;
        startCommand: string;
        startArgs: string[];
    };
}>) => void;
export declare type Public = PublicSchema<typeof coreData>;
export declare type Sensitive = SensitiveSchema<typeof coreData>;
export {};
