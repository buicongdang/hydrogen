import { JsonMap } from './json.js';
declare type Optional<T> = T | null;
export interface Schemas {
    'app_cli3_command/1.0': {
        sensitive: {
            args: string;
            error_message?: Optional<string>;
            metadata?: Optional<string>;
        };
        public: {
            partner_id?: Optional<number>;
            command: string;
            project_type?: Optional<string>;
            time_start: number;
            time_end: number;
            total_time: number;
            success: boolean;
            api_key?: Optional<string>;
            cli_version: string;
            uname: string;
            ruby_version: string;
            node_version: string;
            is_employee: boolean;
        };
    };
    [schemaId: string]: {
        sensitive: JsonMap;
        public: JsonMap;
    };
}
declare type MonorailResult = {
    type: 'ok';
} | {
    type: 'error';
    message: string;
};
export declare function publishEvent<TSchemaId extends keyof Schemas, TPayload extends Schemas[TSchemaId]>(schemaId: TSchemaId, publicData: TPayload['public'], sensitiveData: TPayload['sensitive']): Promise<MonorailResult>;
export {};
